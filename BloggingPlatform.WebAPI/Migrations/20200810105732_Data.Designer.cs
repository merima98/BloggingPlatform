// <auto-generated />
using System;
using BloggingPlatform.WebAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BloggingPlatform.WebAPI.Migrations
{
    [DbContext(typeof(BloggingPlatformContext))]
    [Migration("20200810105732_Data")]
    partial class Data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BloggingPlatform.WebAPI.Database.BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("BlogPost");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            CreatedAt = new DateTime(2020, 8, 10, 12, 57, 31, 64, DateTimeKind.Local).AddTicks(8526),
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality app.",
                            Slug = "augmented-reality-ios-application",
                            Title = "Augmented Reality iOS Application",
                            UpdatedAt = new DateTime(2020, 8, 10, 12, 57, 31, 79, DateTimeKind.Local).AddTicks(8852)
                        },
                        new
                        {
                            Id = 2,
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            CreatedAt = new DateTime(2020, 8, 10, 12, 57, 31, 81, DateTimeKind.Local).AddTicks(317),
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality app.",
                            Slug = "augmented-reality-ios-application-2",
                            Title = "Augmented Reality iOS Application 2",
                            UpdatedAt = new DateTime(2020, 8, 10, 12, 57, 31, 81, DateTimeKind.Local).AddTicks(533)
                        },
                        new
                        {
                            Id = 3,
                            Body = "This is the best way to introduce to the Angular",
                            CreatedAt = new DateTime(2020, 8, 10, 12, 57, 31, 81, DateTimeKind.Local).AddTicks(1022),
                            Description = "Course where the user can learn the most useful tips and triks while learning Angular",
                            Slug = "course-for-begginers-Angular",
                            Title = "Course for begginers - Angular",
                            UpdatedAt = new DateTime(2020, 8, 10, 12, 57, 31, 81, DateTimeKind.Local).AddTicks(1053)
                        },
                        new
                        {
                            Id = 4,
                            Body = "This is the best way to introduce to the HTML5 and CSS3",
                            CreatedAt = new DateTime(2020, 8, 10, 12, 57, 31, 81, DateTimeKind.Local).AddTicks(1235),
                            Description = "Course where the user can learn the most useful tips and triks for web development applications!",
                            Slug = "course-for-begginers-HTML5-CSS3",
                            Title = "Course for begginers - HTML5 and CSS3",
                            UpdatedAt = new DateTime(2020, 8, 10, 12, 57, 31, 81, DateTimeKind.Local).AddTicks(1260)
                        },
                        new
                        {
                            Id = 5,
                            Body = "This is the best way to introduce to the train the dataset",
                            CreatedAt = new DateTime(2020, 8, 10, 12, 57, 31, 81, DateTimeKind.Local).AddTicks(1424),
                            Description = "Course where the user can learn how to clean unstructured dataset, train it and after that test the dataset!",
                            Slug = "course-for-begginers-AWS-Comprehend",
                            Title = "Course for begginers - AWS Comprehend",
                            UpdatedAt = new DateTime(2020, 8, 10, 12, 57, 31, 81, DateTimeKind.Local).AddTicks(1452)
                        });
                });

            modelBuilder.Entity("BloggingPlatform.WebAPI.Database.BlogPostTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SlugId")
                        .HasColumnType("int");

                    b.Property<int?>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SlugId");

                    b.HasIndex("TagId");

                    b.ToTable("BlogPost_Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SlugId = 5,
                            TagId = 9
                        },
                        new
                        {
                            Id = 2,
                            SlugId = 4,
                            TagId = 8
                        },
                        new
                        {
                            Id = 3,
                            SlugId = 4,
                            TagId = 6
                        },
                        new
                        {
                            Id = 4,
                            SlugId = 2,
                            TagId = 1
                        },
                        new
                        {
                            Id = 5,
                            SlugId = 1,
                            TagId = 1
                        },
                        new
                        {
                            Id = 6,
                            SlugId = 1,
                            TagId = 2
                        },
                        new
                        {
                            Id = 7,
                            SlugId = 2,
                            TagId = 2
                        });
                });

            modelBuilder.Entity("BloggingPlatform.WebAPI.Database.Tags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AR"
                        },
                        new
                        {
                            Id = 2,
                            Name = "iOS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Angular"
                        },
                        new
                        {
                            Id = 4,
                            Name = ".Net Core"
                        },
                        new
                        {
                            Id = 5,
                            Name = "C++"
                        },
                        new
                        {
                            Id = 6,
                            Name = "HTML5"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Xamarin"
                        },
                        new
                        {
                            Id = 8,
                            Name = "CSS3"
                        },
                        new
                        {
                            Id = 9,
                            Name = "AWS Comprehend"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Android"
                        });
                });

            modelBuilder.Entity("BloggingPlatform.WebAPI.Database.BlogPostTags", b =>
                {
                    b.HasOne("BloggingPlatform.WebAPI.Database.BlogPost", "Slug")
                        .WithMany("BlogPostTags")
                        .HasForeignKey("SlugId")
                        .HasConstraintName("fk_SlugId");

                    b.HasOne("BloggingPlatform.WebAPI.Database.Tags", "Tag")
                        .WithMany("BlogPostTags")
                        .HasForeignKey("TagId")
                        .HasConstraintName("fk_TagId");
                });
#pragma warning restore 612, 618
        }
    }
}
